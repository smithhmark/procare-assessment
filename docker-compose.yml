version: '2'

services:
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.1
    ports:
      - 9092:9092
    environment:
      CLUSTER_ID: kafka-docker-cluster-1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_BROKER_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@127.0.0.1:9093
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  web:
    build: 
      context: .
      dockerfile: Dockerfile-web
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
        - "RAILS_ENV=${RAILS_ENV:-production}"
        - "NODE_ENV=${NODE_ENV:-production}"
    depends_on:
      db:
        condition: "service_started"
        required: false
    env_file:
      - ".env"
    ports:
      - 3000:3000
      #- "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:8000}:${PORT:-8000}"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    tty: true
    volumes:
      #- "${DOCKER_WEB_VOLUME:-./public:/app/public}"
      - ".:/app"

  db:
    container_name: postgres
    image: postgres:16.3-bookworm
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
    - 5432:5432

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 8080:8080
  

volumes:
  pgdata:
